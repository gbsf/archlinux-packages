--- poppler/CairoOutputDev.cc	2006/09/21 00:56:33	1.44
+++ poppler/CairoOutputDev.cc	2006/12/21 01:01:30	1.48
@@ -134,7 +134,7 @@
   matrix.x0 = ctm[4];
   matrix.y0 = ctm[5];
 
-  cairo_set_matrix (cairo, &matrix);
+  cairo_transform (cairo, &matrix);
 
   OutputDev::setDefaultCTM(ctm);
 }
@@ -202,12 +202,18 @@
   cairo_set_miter_limit (cairo, state->getMiterLimit());
 }
 
+#define MIN(a,b) (a) < (b) ? (a) : (b)
+
 void CairoOutputDev::updateLineWidth(GfxState *state) {
   LOG(printf ("line width: %f\n", state->getLineWidth()));
   if (state->getLineWidth() == 0.0) {
-      cairo_set_line_width (cairo, 72.0/300.0);
+    /* find out how big pixels (device unit) are in the x and y directions
+     * choose the smaller of the two as our line width */
+    double x = 1.0, y = 1.0;
+    cairo_device_to_user_distance(cairo, &x, &y);
+    cairo_set_line_width (cairo, MIN(fabs(x),fabs(y)));
   } else {
-      cairo_set_line_width (cairo, state->getLineWidth());
+    cairo_set_line_width (cairo, state->getLineWidth());
   }
 }
 
@@ -263,8 +269,6 @@
 
 void CairoOutputDev::updateFont(GfxState *state) {
   cairo_font_face_t *font_face;
-  double m11, m12, m21, m22;
-  double w;
   cairo_matrix_t matrix;
 
   LOG(printf ("updateFont() font=%s\n", state->getFont()->getName()->getCString()));
@@ -278,9 +282,6 @@
 
   if (!currentFont)
     return;
-  state->getFontTransMat(&m11, &m12, &m21, &m22);
-  m11 *= state->getHorizScaling();
-  m12 *= state->getHorizScaling();
 
   LOG(printf ("font matrix: %f %f %f %f\n", m11, m12, m21, m22));
   
@@ -289,8 +290,8 @@
  
   double fontSize = state->getFontSize();
   double *m = state->getTextMat();
-  matrix.xx = m[0] * fontSize;
-  matrix.yx = m[1] * fontSize;
+  matrix.xx = m[0] * fontSize * state->getHorizScaling();
+  matrix.yx = m[1] * fontSize * state->getHorizScaling();
   matrix.xy = -m[2] * fontSize;
   matrix.yy = -m[3] * fontSize;
   matrix.x0 = 0;
@@ -620,7 +621,6 @@
   GfxRGB rgb;
   int alpha, i;
   cairo_matrix_t matrix;
-  cairo_matrix_t maskMatrix;
   int is_identity_transform;
 
   buffer = (unsigned char *)gmalloc (width * height * 4);
@@ -662,12 +662,9 @@
   cairo_matrix_init_translate (&matrix, 0, height);
   cairo_matrix_scale (&matrix, width, -height);
 
-  cairo_matrix_init_translate (&maskMatrix, 0, maskHeight);
-  cairo_matrix_scale (&maskMatrix, maskWidth, -maskHeight);
-
-
+  /* scale the mask to the size of the image unlike softMask */
   cairo_pattern_set_matrix (pattern, &matrix);
-  cairo_pattern_set_matrix (maskPattern, &maskMatrix);
+  cairo_pattern_set_matrix (maskPattern, &matrix);
 
   cairo_pattern_set_filter (pattern, CAIRO_FILTER_BILINEAR);
   cairo_set_source (cairo, pattern);
