--- bus/bus.c	2006/12/12 21:24:07	1.73
+++ bus/bus.c	2006/12/20 06:18:19	1.74
@@ -402,6 +402,7 @@
 {
   DBusString full_address;
   DBusList *link;
+  BusActivation *new_activation;
   char *addr;
 
   dbus_bool_t retval;
@@ -467,19 +468,20 @@
     }
 
   /* Create activation subsystem */
-  
-  if (is_reload)
-    bus_activation_unref (context->activation);
-  
-  context->activation = bus_activation_new (context, &full_address,
-                                            bus_config_parser_get_service_dirs (parser),
-                                            error);
-  if (context->activation == NULL)
+  new_activation = bus_activation_new (context, &full_address,
+				       bus_config_parser_get_service_dirs (parser),
+				       error);
+  if (new_activation == NULL)
     {
       _DBUS_ASSERT_ERROR_IS_SET (error);
       goto failed;
     }
 
+  if (is_reload)
+    bus_activation_unref (context->activation);
+
+  context->activation = new_activation;
+
   /* Drop existing conf-dir watches (if applicable) */
 
   if (is_reload)
--- bus/main.c	2006/09/16 15:34:34	1.35
+++ bus/main.c	2006/12/20 06:18:19	1.36
@@ -37,6 +37,7 @@
 #define RELOAD_READ_END 0
 #define RELOAD_WRITE_END 1
 
+static void close_reload_pipe (void);
 
 static void
 signal_handler (int sig)
@@ -51,11 +52,12 @@
 #endif /* DBUS_BUS_ENABLE_DNOTIFY_ON_LINUX  */
     case SIGHUP:
       _dbus_string_init_const (&str, "foo");
-      if (!_dbus_write_socket (reload_pipe[RELOAD_WRITE_END], &str, 0, 1))
-	{
-	  _dbus_warn ("Unable to write to reload pipe.\n");
-	  exit (1);
-	}
+      if ((reload_pipe[RELOAD_WRITE_END] > 0) && 
+          !_dbus_write_socket (reload_pipe[RELOAD_WRITE_END], &str, 0, 1))
+        {
+          _dbus_warn ("Unable to write to reload pipe.\n");
+          close_reload_pipe ();
+        }
       break;
 
     case SIGTERM:
@@ -150,20 +152,28 @@
   DBusError error;
   DBusString str;
   _dbus_string_init (&str);
-  if (_dbus_read_socket (reload_pipe[RELOAD_READ_END], &str, 1) != 1)
+  if ((reload_pipe[RELOAD_READ_END] > 0) &&
+      _dbus_read_socket (reload_pipe[RELOAD_READ_END], &str, 1) != 1)
     {
       _dbus_warn ("Couldn't read from reload pipe.\n");
-      exit (1);
+      close_reload_pipe ();
+      return TRUE;
     }
   _dbus_string_free (&str);
 
+  /* this can only fail if we don't understand the config file
+   * or OOM.  Either way we should just stick with the currently
+   * loaded config.
+   */
   dbus_error_init (&error);
   if (! bus_context_reload_config (context, &error))
     {
+      _DBUS_ASSERT_ERROR_IS_SET (&error);
+      _dbus_assert (dbus_error_has_name (&error, DBUS_ERROR_FAILED) ||
+		    dbus_error_has_name (&error, DBUS_ERROR_NO_MEMORY));
       _dbus_warn ("Unable to reload configuration: %s\n",
 		  error.message);
       dbus_error_free (&error);
-      exit (1);
     }
   return TRUE;
 }
@@ -219,6 +229,16 @@
 
 }
 
+static void
+close_reload_pipe (void)
+{
+    _dbus_close_socket (reload_pipe[RELOAD_READ_END], NULL);
+    reload_pipe[RELOAD_READ_END] = -1;
+
+    _dbus_close_socket (reload_pipe[RELOAD_WRITE_END], NULL);
+    reload_pipe[RELOAD_WRITE_END] = -1;
+}
+
 int
 main (int argc, char **argv)
 {
